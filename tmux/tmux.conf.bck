# =======================
# === General setting ===
# =======================

set -g default-terminal "screen-256color"
set -g history-limit 500
set -g buffer-limit 20
setw -g automatic-rename off
setw -g aggressive-resize on

# Inactive titles
set -g set-titles on
set -g set-titles-string "#I.#W"

# Index start at 1 not 0
set -g base-index 1
set -g pane-base-index 1

# Enable mouse
set -g mouse on

# ================
# === Bindings ===
# ================

unbind C-b
set -g prefix C-a

unbind "\$"	# rename-session
unbind ,	# rename-window
unbind %	# split-window h
unbind '"'	# split-window v
unbind }	# swap-pane -D
unbind {	# swap-pane -U
unbind ]
unbind [	# paste-buffer
unbind "'"	# select-window
unbind n	# next-window
unbind p	# previous-window
unbind l	# last-window
unbind M-n	# next-window with alert
unbind M-p	# preivous-window with alert
unbind o	# focus thru pane
unbind &	# kill-window
unbind "#"	# list-buffer
unbind =	# choose-buffer
unbind z	# zoom-pane
unbind M-up	# resize up down left right
unbind M-Down
unbind M-left
unbind M-right

# Reload config
bind C-r source-file ~/.tmux.conf \; display "Reloaded !"

# New window will keep current path
bind c new-window -c "${pane_current_path}"

# Rename window on creation
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session / window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Selection
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window
bind -r C-o swap-pane -D

# Zoom
bind + resize-pane -Z

# Kill
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows ? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S ? (y/n)" kill-session

# Hide status bar if asked
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# =============
# === Theme ===
# =============

orange="colour166"
purple="colour134"
green="colour076"
blue="colour39"
yellow="colour220"
red="colour160"
black="colour232"
white="white"

color_dark="$black"
color_light="$white"
color_session_text="$white"
color_status_text="colour245"
color_main="$blue"
color_secondary="$orange"
color_level_ok="$green"
color_level_warn="$yellow"
color_level_stress="$red"
color_window_off_indicator="colour088"
color_window_off_status_bg="$black"
color_window_off_status_current_bg="colour254"

# ==================
# === Appearance ===
# ==================

set -g mode-style "fg=default,bg=$color_main"

# Command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# Status line
set -g status-style "fg=$color_status_text,bg=$color_dark"

# Segment in status line
set -g window-status-separator ""

setw -g window-status-format " #I.#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main] #I.#W #[fg=$color_main,bg=$color_dark]"

setw -g window-status-activity-style "fg=$color_main"

setw -g pane-active-border-style "fg=$color_main"

# General setting for status bar
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# Widgets
wg_session="#[fg=$color_session_text] #S #[default]"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_hightlight} $wg_date"
